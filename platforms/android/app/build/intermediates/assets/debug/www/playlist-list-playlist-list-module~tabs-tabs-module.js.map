{"version":3,"sources":["webpack:///./src/app/playlist-list/playlist-list.module.ts","webpack:///./src/app/playlist-list/playlist-list.page.html","webpack:///./src/app/playlist-list/playlist-list.page.scss","webpack:///./src/app/playlist-list/playlist-list.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACoB;AACZ;AAEV;AAEW;AACU;AACjB;AACM;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;AAgBF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAdlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,6EAAe;gBACf,4DAAU;gBACV,kEAAmB;gBACnB,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;YAChC,OAAO,EAAC,EAAE;SACX,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACjCnC,yvCAAyvC,kBAAkB,iyB;;;;;;;;;;;ACA3wC,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACmC;AAChC;AACG;AACM;AACrB;AACyD;AAOlG;IAUE,0BACS,SAA0B,EACzB,eAAsC,EACvC,WAAwB,EACvB,cAA+B,EAC/B,WAAuB,EACxB,YAAyB,EACxB,MAAa;QAPvB,iBAgCG;QA/BM,cAAS,GAAT,SAAS,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAuB;QACvC,gBAAW,GAAX,WAAW,CAAa;QACvB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAY;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACxB,WAAM,GAAN,MAAM,CAAO;QAbhB,iBAAY,GAAG,EAAE,CAAC;QAClB,WAAM,GAAE,EAAE,CAAC;QACX,WAAM,GAAC,EAAE,CAAC;QACV,SAAI,GAAC,SAAS,CAAC;QACtB,mBAAc,GAAC,KAAK,CAAC;QAWjB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAI;YACrC,KAAI,CAAC,IAAI,GAAC,IAAI,CAAC;YACf,IAAG,IAAI,IAAE,SAAS;gBAAC,KAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC,CACJ;QAED;;;;;;;;;UASE;QAEF,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,YAAE;YACrC,KAAI,CAAC,MAAM,GAAC,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,EAAC,YAAY,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;IAE9D,CAAC;IAGH,2CAAgB,GAAhB;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,sCAAW,GAAX;QACE,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,IAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,IAAE,EAAE,EAAC;YACxF,IAAI,YAAY,GAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAGD,uCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,cAAI;YAC1C,KAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,MAAM,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC;QACtE,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAGD,uCAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,KAAK,GAAC,wCAAsC,IAAI,CAAC,MAAM,SAAI,QAAQ,CAAC,GAAG,MAAG,CAAC;QAC/E,4EAA4E;QAE5E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAGD,oCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAIM,yCAAc,GAApB,UAAqB,QAAQ;;;;;;;wBACxB,SAAS,GAAC;4BACZ;gCACE,IAAI,EAAE,iBAAiB;gCACvB,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE;;;;oDACO,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC,SAAS,EAAC,6GAA0B,EAAC,cAAc,EAAE,EAAE,QAAQ,EAAC,QAAQ,EAAC,EAAC,CAAC;;gDAAhH,KAAK,GAAG,SAAwG;gDACtH,KAAK,CAAC,OAAO,EAAE,CAAC;;;;qCACjB;6BACF,EAAC;gCACA,IAAI,EAAE,iBAAiB;gCACvB,IAAI,EAAE,QAAQ;gCACd,OAAO,EAAE;oCACP,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gCAChC,CAAC;6BACF;yBACF,CAAC;wBAGF,SAAS,CAAC,IAAI,CACZ;4BACE,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAC,EAAE;4BACP,OAAO,EAAE;gCACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;4BAC1B,CAAC;yBACF,CACF,CAAC;wBAEgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAClD,MAAM,EAAE,SAAS;gCACjB,OAAO,EAAC,SAAS;6BAClB,CAAC;;wBAHE,WAAW,GAAG,SAGhB;wBAEF,WAAW,CAAC,OAAO,EAAE,CAAC;;;;;KACvB;IAED,mCAAQ,GAAR;QACE,0BAA0B;QAC1B,IAAG;YACD,QAAQ,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,MAAM,EAAE,CAAC;SAC7D;QAAC,OAAO,CAAC,EAAC;SAEV;QAED,wBAAwB;QACxB,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjD,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC;QACjC,WAAW,CAAC,OAAO,GAAG,EAAE,CAAC;QACzB,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACpE,CAAC;IAEC,oCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IA9IU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAYoB,8DAAe;YACR,oEAAqB;YAC3B,gEAAY;YACP,yEAAe;YACnB,0DAAW;YACX,gEAAY;YACjB,sDAAM;OAjBZ,gBAAgB,CAiJ5B;IAAD,uBAAC;CAAA;AAjJ4B","file":"playlist-list-playlist-list-module~tabs-tabs-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule   } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlaylistListPage } from './playlist-list.page';\nimport { ItemVideoModule } from '../item-video/item-video.module';\nimport { MenuModule } from '../menu/menu.module';\nimport { FooterModule } from '../footer/footer.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaylistListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ItemVideoModule,\n    MenuModule,\n    ReactiveFormsModule,\n    FooterModule \n  ],\n  declarations: [PlaylistListPage],\n  exports:[]\n})\nexport class PlaylistListPageModule {}\n","module.exports = \"<ion-header>\\n    <app-menu></app-menu>\\n</ion-header>\\n\\n\\n<ion-content padding class='fg-content'>\\n<div *ngIf=\\\"displayConnect == false\\\">\\n  <ion-show-when size=\\\"md, lg, xl\\\"><h1>Your Playlists</h1></ion-show-when>\\n  <ion-card>\\n    <ion-card-header class='card-menu'>\\n      Create a playlist\\n    </ion-card-header>\\n    <ion-card-content>\\n        <form class='playlist-new' [formGroup]=\\\"playlistForm\\\" (ngSubmit)=\\\"addPlaylist()\\\" novalidate>\\n          <ion-item>\\n            <ion-label color=\\\"primary\\\">Playlist title</ion-label>\\n            <ion-input formControlName=\\\"playlistName\\\" [(ngModel)]=\\\"namePl\\\" placeholder=\\\"My awesome playlist\\\"></ion-input>\\n          </ion-item>\\n          <p class='center'><ion-button  type=\\\"submit\\\"><ion-icon name=\\\"add\\\"></ion-icon> Create playlist</ion-button></p>\\n        </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-card *ngIf=\\\"listPlaylist.length > 0\\\">\\n      <ion-card-header class='card-menu'>\\n        My playlists\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list listPlaylist  >\\n          <ion-item *ngFor=\\\"let playList of listPlaylist\\\">\\n            <ion-label (click)=\\\"showPlaylist(playList)\\\" class='clickable playlist-name'>\\n              {{ playList.title }}\\n            </ion-label>\\n            <div  slot='end'>\\n                <ion-button (click)=\\\"actionPlaylist(playList)\\\"><ion-icon name='create'></ion-icon></ion-button>\\n            </div>\\n          </ion-item>\\n        </ion-list>\\n      </ion-card-content>\\n  </ion-card>\\n</div>\\n\\n<div *ngIf=\\\"displayConnect == true\\\">\\n    <div class='center header'>\\n        <h1>Please connect to Tango Fury</h1>\\n        <p>Create an account and connect to Tango Fury to create your own playlists and manage your favorites maestros.</p>\\n        <p>It's free and we won't send you any further email :).</p>\\n        <p>    \\n          <ion-button (click)='goToLogin()'>\\n            <ion-icon name=\\\"person\\\"></ion-icon> Connect\\n          </ion-button>\\n        </p>\\n    </div>\\n</div>\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NavController,ModalController,ActionSheetController } from '@ionic/angular';\nimport { AuthProvider } from '../services/auth/auth';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ProfileProvider } from '../services/profile/profile';\nimport { Router } from '@angular/router';\nimport { ModalPlaylistEditComponent } from '../modal-playlist-edit/modal-playlist-edit.component';\n\n@Component({\n  selector: 'app-playlist-list',\n  templateUrl: './playlist-list.page.html',\n  styleUrls: ['./playlist-list.page.scss'],\n})\nexport class PlaylistListPage implements OnInit {\n\n\n  public playlistForm: FormGroup;\n  public listPlaylist = [];\n  public namePl= \"\";\n  public userId=\"\";\n  public role=\"visitor\";\n  displayConnect=false;\n  \n  constructor(\n    public modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController ,\n    public authService:AuthProvider,\n    private profileService: ProfileProvider,\n    private formBuilder:FormBuilder,\n    public authProvider:AuthProvider,\n    private router:Router\n    ){ \n      this.profileService.getUserRole().then(role=>{\n            this.role=role;\n            if(role==\"visitor\")this.displayConnect=true;\n            return role;\n          }\n      )\n\n      /*\n      this.profileService.getUserRole().then(role=>{\n        this.role=role;\n        }\n      ).then(role=>{\n        this.authService.lockAuth(role);\n      });\n  \n      this.videos=this.playlistService.getVideosWithoutLoading();\n      */\n\n      this.profileService.getUserId().then(id=>{\n        this.userId=id;\n      });\n      this.playlistForm = formBuilder.group({playlistName: ['']});\n\n    }\n\n\n  ionViewWillEnter(){\n    this.getPlaylists();\n}\n\naddPlaylist(){\n  if(this.playlistForm.value.playlistName!=null && this.playlistForm.value.playlistName!=\"\"){\n    var playlistName=this.namePl;\n    this.namePl=\"\";\n    this.profileService.addPlaylist(playlistName);\n    this.getPlaylists();\n  }\n}\n\n\ngetPlaylists(){\n  this.profileService.getPlaylists().then(data => {\n    this.listPlaylist=data;\n  });\n}\n\nremovePlaylist(playList){\n  var result = confirm(\"Do you really want to delete this playlist ? \");\n  if (result) {\n    this.profileService.removePlaylist(playList);\n    this.getPlaylists();\n  }\n}\n\n\nshowPlaylist(playList){\n  let urlPL=`/tabs/(playlist-list:playlist-user/${this.userId}/${playList.key})`;\n  //urlPL=`/tabs/(home:playlist/NbtwzggJpfYmu1rN4lqdCNBBSVu1/${playList.key})`\n  \n  this.router.navigateByUrl(urlPL);\n}\n\n\ngoToLogin(){\n  this.router.navigateByUrl(`login`);\n}\n\n\n\n async actionPlaylist(playlist){\n  var myButtons=[\n    {\n      text: 'Modify playlist',\n      icon: \"settings\",\n      handler: async() => {\n        const modal = await this.modalCtrl.create({component:ModalPlaylistEditComponent,componentProps: { playlist:playlist}});\n        modal.present();\n      }\n    },{\n      text: 'Delete Playlist',\n      icon: \"remove\",\n      handler: () => {\n        this.removePlaylist(playlist);\n      }\n    }\n  ];\n\n\n  myButtons.push(\n    {\n      text: 'Cancel',\n      icon:\"\",\n      handler: () => {\n          console.log(\"cancel\");\n      }\n    }\n  );\n\n  let actionSheet = await this.actionSheetCtrl.create({\n    header: 'Actions',\n    buttons:myButtons\n  });\n  \n  actionSheet.present();\n}\n\nngOnInit() {\n  // Try to remove META-Tags\n  try{\n    document.querySelector(\"meta[name='description']\").remove();\n  } catch (e){\n\n  }\n\n  // Add the new META-Tags\n  var description = document.createElement('meta');\n  description.name = \"description\";\n  description.content = \"\";\n  document.getElementsByTagName('head')[0].appendChild(description);\n}\n\n  goToAbout():void{\n    this.router.navigateByUrl(`about`);\n  }\n\n\n}\n"],"sourceRoot":""}