{"version":3,"sources":["webpack:///./src/app/reset-password/reset-password.module.ts","webpack:///./src/app/reset-password/reset-password.page.html","webpack:///./src/app/reset-password/reset-password.page.scss","webpack:///./src/app/reset-password/reset-password.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACkB;AACV;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAYF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAVnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BpC,kuC;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACiC;AACf;AACf;AACA;AACZ;AAOzC;IAIE,2BAAmB,MAAa,EACvB,OAAsB,EAAS,WAA8B,EAAS,SAA0B,EAAS,YAA0B,EAAE,WAAwB;QADnJ,WAAM,GAAN,MAAM,CAAO;QACvB,YAAO,GAAP,OAAO,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAExI,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE;gBACL,EAAE;gBACH,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,gEAAc,CAAC,OAAO,CAAC,CAAC;aAClE;SACF,CAAC,CAAC;IACL,CAAC;IAGF,yCAAa,GAAb;QAAA,iBAeC;QAdD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;YACjC,OAAO,CAAC,GAAG,CAAE,2CAAyC,IAAI,CAAC,iBAAiB,CAAC,KAAO,CAAE,CAAC;SACxF;aAAM;YACL,IAAM,KAAK,GAAW,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CACzC,cAAI;gBACF,IAAI,OAAO,GAAC,4CAA4C,CAAC;gBACzD,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC1B,CAAC,EAAE,eAAK;gBACN,IAAI,OAAO,GAAC,wBAAwB,CAAC;gBACrC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAEK,qCAAS,GAAf,UAAgB,OAAO;;;;;4BACX,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,EAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;;wBAAjG,KAAK,GAAC,SAA2F;wBACrG,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAGD,gCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IA5CU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAK0B,sDAAM;YACd,4DAAa,EAAsB,gEAAiB,EAAoB,8DAAe,EAAuB,gEAAY,EAAe,0DAAW;OAL3J,iBAAiB,CA8C7B;IAAD,wBAAC;CAAA;AA9C6B","file":"reset-password-reset-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n     <ion-back-button slot=\\\"start\\\" (click)=\\\"back()\\\"></ion-back-button>\\n    <ion-title>Reset password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n  \\n<ion-content class='fg-content' padding>\\n    <ion-card>\\n      <ion-card-header class='card-menu'>\\n        <ion-icon name=\\\"person\\\"></ion-icon> Reset password\\n      </ion-card-header>\\n      <ion-card-content>\\n        <form [formGroup]=\\\"resetPasswordForm\\\" (submit)=\\\"resetPassword()\\\" novalidate>\\n          <ion-item>\\n            <ion-label stacked>Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Your email address\\\" [class.invalid]=\\\"!resetPasswordForm.controls.email.valid\\\">\\n            </ion-input>\\n          </ion-item>\\n          <ion-item class=\\\"error-message\\\" *ngIf=\\\"!resetPasswordForm.controls.email.valid && resetPasswordForm.controls.email.touched\\\"> <p>Please enter a valid email.</p> </ion-item>\\n          <div class='center'>\\n            <ion-button block type=\\\"submit\\\" [disabled]=\\\"!resetPasswordForm.valid\\\"> Reset your Password </ion-button>\\n          </div>\\n        </form>\\n      </ion-card-content>\\n    </ion-card>\\n</ion-content>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController, NavController } from '@ionic/angular'; \nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmailValidator } from '../validators/email';\nimport { AuthProvider } from '../services/auth/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n\n  public resetPasswordForm : FormGroup\n\n  constructor(public router:Router,\n    public navCtrl: NavController, public loadingCtrl: LoadingController, public alertCtrl: AlertController, public authProvider: AuthProvider, formBuilder: FormBuilder\n    ) {\n      this.resetPasswordForm = formBuilder.group({\n        email: [\n          \"\",\n         Validators.compose([Validators.required, EmailValidator.isValid])\n       ]\n     });\n   }\n\n\n  resetPassword(): void {\n  if (!this.resetPasswordForm.valid) {\n    console.log( `Form is not valid yet, current value: ${this.resetPasswordForm.value}` );\n  } else {\n    const email: string = this.resetPasswordForm.value.email;\n    this.authProvider.resetPassword(email).then(\n      user => {\n        let message=\"Check your email for a password reset link\";\n        this.showAlert(message);\n      }, error => {\n        let message=\"Error :( I'm sorry ...\";\n        this.showAlert(message);\n        } \n      );\n    }\n  }\n  \n  async showAlert(message){\n    let alert=await this.alertCtrl.create({ message:message, buttons: [{ text: \"Ok\", role: \"cancel\" }] });\n    await alert.present();\n  }\n\n\n  back(){\n    this.router.navigateByUrl(\"login\");\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}